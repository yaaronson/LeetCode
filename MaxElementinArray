public class Solution
{
    public int MajorityElement(int[] nums)

    {

        Dictionary<int, int> myDictionary= new Dictionary<int, int>();
        for (int i = 0; i < nums.Length; i++)
        {

            if (myDictionary.ContainsKey(nums[i]))
            {
                myDictionary[nums[i]]++;

            }
            else
            {
                myDictionary.Add(nums[i], 1);
               
            }
          

        }

        return myDictionary.Max(x => x.Value);

    }
}

The `MajorityElement` method is designed to find the most frequently occurring element in an array. It begins by creating a dictionary to keep track of the frequency of each number. 
As it iterates through the array, it updates the dictionary with the count of each number.
If the number is already in the dictionary, its count is incremented; if not, it is added with a count of 1. Once all elements are processed, the method determines the highest count from the dictionary and returns it. 
However, it's important to note that this implementation returns the highest frequency count rather than the actual majority element itself. 
For a complete solution, the method should return the number associated with the highest count instead.
