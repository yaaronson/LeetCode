
class FSA:
    def __init__(self):
        # Define states
        self.states = {'q0', 'q1'}
        self.start_state = 'q0'
        self.accept_states = {'q0'}
        self.current_state = self.start_state


    def transition(self, input_symbol):
        if self.current_state == 'q0':
            if input_symbol == '0':
                self.current_state = 'q1'
            elif input_symbol == '1':
                self.current_state = 'q0'
        elif self.current_state == 'q1':
            if input_symbol == '0':
                self.current_state = 'q0'
            elif input_symbol == '1':
                self.current_state = 'q1'


    def reset(self):
        self.current_state = self.start_state


    def process_string(self, input_string):
        self.reset()
        for symbol in input_string:
            self.transition(symbol)
        return self.current_state in self.accept_states


if __name__ == "__main__":
    fsa = FSA()
    test_strings = ['00', '01', '10', '11', '000', '001', '010', '011', '100', '101', '110', '111']

    for s in test_strings:
        result = fsa.process_string(s)
        print(f"Input: {s}, Accepted: {result}")





When you run the script, it will test several binary strings and print whether each is accepted by the automation

Explanation:

